name: Deploy Website

on:
  push:
    branches: [ main ]
    paths:
      - 'app/website/**'
      - 'components/website/**'
      - 'next.config.mjs'
      - 'package.json'
      - '.github/workflows/deploy-website.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: npm run website:build
        env:
          NODE_ENV: production

      - name: Create website directory structure
        run: |
          mkdir -p ./website-deploy
          # Copy the website files to root, creating the structure users expect
          cp -r ./out/website/* ./website-deploy/
          # Copy necessary Next.js assets
          cp -r ./out/_next ./website-deploy/
          # Copy other assets if they exist
          if [ -d "./out/assets" ]; then cp -r ./out/assets ./website-deploy/; fi
          # Create simple 404.html that redirects to homepage (no client-side routing needed)
          echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0;url=/"></head><body><p>Redirecting to <a href="/">homepage</a>...</p></body></html>' > ./website-deploy/404.html
          # Create .nojekyll to prevent Jekyll processing
          touch ./website-deploy/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website-deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
