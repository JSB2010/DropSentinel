name: Container & Analytics

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
  release:
    types: [published]
  repository_dispatch:
    types: [release-analytics]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to analyze (e.g., 1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish-container:
    name: Publish Development Container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=DropSentinel Development Environment
          org.opencontainers.image.description=Advanced file security scanner with real-time protection and VirusTotal integration
          org.opencontainers.image.vendor=DropSentinel
          org.opencontainers.image.licenses=MIT

    - name: Create Dockerfile for development environment
      run: |
        cat > Dockerfile << 'EOF'
        FROM node:20-alpine

        # Install system dependencies for building native modules
        RUN apk add --no-cache \
            git \
            python3 \
            make \
            g++ \
            curl \
            bash \
            ca-certificates

        # Create app user for security
        RUN addgroup -g 1001 -S nodejs && \
            adduser -S nextjs -u 1001

        # Set working directory
        WORKDIR /app

        # Copy package files first for better caching
        COPY package*.json ./
        COPY .npmrc* ./

        # Install dependencies
        RUN npm ci --legacy-peer-deps --only=production && \
            npm cache clean --force

        # Copy source code
        COPY --chown=nextjs:nodejs . .

        # Build application
        RUN npm run build

        # Switch to non-root user
        USER nextjs

        # Expose port
        EXPOSE 3000

        # Set environment variables
        ENV NODE_ENV=production
        ENV NEXT_TELEMETRY_DISABLED=1
        ENV PORT=3000

        # Health check
        HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
          CMD curl -f http://localhost:3000/api/health || exit 1

        # Start application
        CMD ["npm", "start"]
        EOF

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  release-analytics:
    name: Generate Release Analytics
    runs-on: ubuntu-latest
    needs: [publish-container]
    if: always()
    permissions:
      contents: read

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Extract version info
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          VERSION="${{ github.event.client_payload.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Analyzing version: $VERSION"

    - name: Generate release metrics
      run: |
        mkdir -p release-analytics

        # Create release analytics report
        cat > release-analytics/release-metrics-${{ steps.version.outputs.version }}.json << EOF
        {
          "version": "${{ steps.version.outputs.version }}",
          "releaseDate": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "repository": "JSB2010/DropSentinel",
          "commit": "${{ github.sha }}",
          "platforms": {
            "windows": {
              "formats": ["NSIS Installer (.exe)", "MSI Package (.msi)", "Portable (.exe)", "ZIP Archive (.zip)"],
              "architectures": ["x64"],
              "totalFormats": 4
            },
            "macos": {
              "formats": ["DMG Disk Image (.dmg)", "ZIP Archive (.zip)"],
              "architectures": ["Universal (Intel + Apple Silicon)"],
              "totalFormats": 2
            },
            "linux": {
              "formats": ["AppImage (.AppImage)", "TAR.GZ Archive (.tar.gz)"],
              "architectures": ["x64"],
              "totalFormats": 2
            },
            "container": {
              "registry": "ghcr.io/jsb2010/dropsentinel",
              "formats": ["Docker Container"],
              "architectures": ["amd64"],
              "totalFormats": 1,
              "purpose": "Development environment and testing"
            }
          },
          "totalPlatforms": 4,
          "totalPackages": 9,
          "buildSystem": "electron-builder + docker",
          "features": [
            "Real-time file scanning",
            "VirusTotal integration",
            "Background monitoring",
            "Cross-platform support",
            "Modern UI/UX",
            "Comprehensive threat detection",
            "Development container support"
          ],
          "releaseType": "stable",
          "changelog": "https://github.com/JSB2010/DropSentinel/blob/main/CHANGELOG.md",
          "downloadLinks": "https://github.com/JSB2010/DropSentinel/releases/tag/v${{ steps.version.outputs.version }}",
          "containerRegistry": "https://github.com/JSB2010/DropSentinel/pkgs/container/dropsentinel"
        }
        EOF

    - name: Create release summary
      run: |
        cat > release-analytics/RELEASE-SUMMARY.md << 'EOF'
        # 📊 DropSentinel Release Analytics

        ## 🎯 Release Overview

        - **Version**: ${{ steps.version.outputs.version }}
        - **Release Date**: $(date -u +%Y-%m-%d)
        - **Commit**: ${{ github.sha }}
        - **Repository**: JSB2010/DropSentinel

        ## 📦 Package Distribution

        ### Windows (4 packages)
        - ✅ NSIS Installer (.exe) - Recommended
        - ✅ MSI Package (.msi) - Enterprise
        - ✅ Portable (.exe) - No installation
        - ✅ ZIP Archive (.zip) - Compressed

        ### macOS (2 packages)
        - ✅ DMG Disk Image (.dmg) - Standard installer
        - ✅ ZIP Archive (.zip) - Application bundle

        ### Linux (2 packages)
        - ✅ AppImage (.AppImage) - Universal format
        - ✅ TAR.GZ Archive (.tar.gz) - Compressed

        ### Container (1 package)
        - ✅ Docker Container (ghcr.io/jsb2010/dropsentinel) - Development environment

        ## 🔧 Technical Details

        - **Build System**: electron-builder
        - **Node.js Version**: 20.x
        - **Electron Version**: 32.2.7
        - **Compression**: Maximum
        - **Code Signing**: Available when certificates present

        ## 🚀 Key Features

        - Real-time file scanning with VirusTotal API
        - Background monitoring of Downloads folder
        - Cross-platform desktop application
        - Modern, responsive UI with dark/light themes
        - Comprehensive threat detection and analysis
        - System tray integration

        ## 📈 Release Metrics

        - **Total Platforms**: 4 (Windows, macOS, Linux, Container)
        - **Total Packages**: 9 different formats
        - **Architecture Support**: x64, ARM64 (macOS Universal), amd64 (Container)
        - **Package Sizes**: ~80-180 MB depending on format
        - **Container Registry**: GitHub Container Registry (ghcr.io)

        ## 🔗 Links

        - [Download Release](https://github.com/JSB2010/DropSentinel/releases/tag/v${{ steps.version.outputs.version }})
        - [Container Registry](https://github.com/JSB2010/DropSentinel/pkgs/container/dropsentinel)
        - [Changelog](https://github.com/JSB2010/DropSentinel/blob/main/CHANGELOG.md)
        - [Documentation](https://github.com/JSB2010/DropSentinel#readme)
        - [Website](https://dropsentinel.com)

        ## 🐳 Container Usage

        ```bash
        # Pull the latest development container
        docker pull ghcr.io/jsb2010/dropsentinel:latest

        # Run development environment
        docker run -p 3000:3000 ghcr.io/jsb2010/dropsentinel:latest

        # Run specific version
        docker run -p 3000:3000 ghcr.io/jsb2010/dropsentinel:${{ steps.version.outputs.version }}
        ```
        EOF

    - name: Upload release analytics
      uses: actions/upload-artifact@v4
      with:
        name: release-analytics-${{ steps.version.outputs.version }}
        path: release-analytics/
        retention-days: 365

  create-release-summary:
    name: Create Release Summary
    runs-on: ubuntu-latest
    needs: [release-analytics]
    if: always()

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Create comprehensive release summary
      run: |
        echo "## 🎉 DropSentinel Release Analytics Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Release Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: Latest" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Date**: $(date -u +%Y-%m-%d)" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: JSB2010/DropSentinel" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Package Distribution" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Windows**: 4 packages (NSIS, MSI, Portable, ZIP)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **macOS**: 2 packages (DMG, ZIP)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Linux**: 2 packages (AppImage, TAR.GZ)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Container**: 1 package (Docker development environment)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
        echo "- [📥 Download Latest Release](https://github.com/JSB2010/DropSentinel/releases/latest)" >> $GITHUB_STEP_SUMMARY
        echo "- [🐳 Container Registry](https://github.com/JSB2010/DropSentinel/pkgs/container/dropsentinel)" >> $GITHUB_STEP_SUMMARY
        echo "- [📋 View Changelog](https://github.com/JSB2010/DropSentinel/blob/main/CHANGELOG.md)" >> $GITHUB_STEP_SUMMARY
        echo "- [🌐 Visit Website](https://dropsentinel.com)" >> $GITHUB_STEP_SUMMARY
        echo "- [📚 Read Documentation](https://github.com/JSB2010/DropSentinel#readme)" >> $GITHUB_STEP_SUMMARY
