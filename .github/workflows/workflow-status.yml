name: Workflow Status Dashboard

on:
  workflow_dispatch:
  schedule:
    # Run every day at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  workflow-status:
    name: Generate Workflow Status Dashboard
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Generate workflow status report
      run: |
        echo "# 🚀 DropSentinel CI/CD Workflow Status Dashboard" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Generated**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "## 📋 Available Workflows" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 🔄 Active Workflows" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Workflow | Purpose | Triggers | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|---------|----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| **CI** | Basic testing and validation | Push, PR | ✅ Active |" >> $GITHUB_STEP_SUMMARY
        echo "| **Optimized Build** | Fast cross-platform builds | Push, PR, Manual | ✅ Active |" >> $GITHUB_STEP_SUMMARY
        echo "| **Release** | Release management | Tags | ✅ Active |" >> $GITHUB_STEP_SUMMARY
        echo "| **Publish Packages** | GitHub Packages publishing | Release, Manual | ✅ Active |" >> $GITHUB_STEP_SUMMARY
        echo "| **CodeQL** | Security analysis | Push, PR, Schedule | ✅ Active |" >> $GITHUB_STEP_SUMMARY
        echo "| **Maintenance** | Dependency auditing | Schedule, Manual | ✅ Active |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### ⚠️ Deprecated Workflows" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Workflow | Status | Replacement |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|--------|-------------|" >> $GITHUB_STEP_SUMMARY
        echo "| **Legacy Build Packages** | ⚠️ Deprecated | Use **Optimized Build** instead |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "## 🎯 Workflow Recommendations" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 🚀 For Development" >> $GITHUB_STEP_SUMMARY
        echo "- **Push to main/develop**: Triggers CI and Optimized Build workflows" >> $GITHUB_STEP_SUMMARY
        echo "- **Create PR**: Triggers CI, CodeQL, and Dependency Review" >> $GITHUB_STEP_SUMMARY
        echo "- **Manual builds**: Use 'Optimized Build' workflow with custom platform selection" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 📦 For Releases" >> $GITHUB_STEP_SUMMARY
        echo "1. **Create release tag**: \`git tag v1.0.0 && git push origin v1.0.0\`" >> $GITHUB_STEP_SUMMARY
        echo "2. **Release workflow**: Automatically builds all platforms and creates GitHub release" >> $GITHUB_STEP_SUMMARY
        echo "3. **Package publishing**: Automatically publishes to GitHub Packages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 🔧 For Maintenance" >> $GITHUB_STEP_SUMMARY
        echo "- **Security audits**: Run automatically every Sunday" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL analysis**: Run automatically on code changes and weekly" >> $GITHUB_STEP_SUMMARY
        echo "- **Manual maintenance**: Use 'Maintenance' workflow for on-demand audits" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "## ⚡ Performance Optimizations" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Optimized Build Workflow Features" >> $GITHUB_STEP_SUMMARY
        echo "- **Parallel builds** across Windows, macOS, and Linux" >> $GITHUB_STEP_SUMMARY
        echo "- **Advanced caching** for dependencies and build artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- **Configurable platforms** - build only what you need" >> $GITHUB_STEP_SUMMARY
        echo "- **Smart compression** with configurable levels" >> $GITHUB_STEP_SUMMARY
        echo "- **Enhanced logging** and build analytics" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 📊 Expected Performance Improvements" >> $GITHUB_STEP_SUMMARY
        echo "- ⚡ **40-50% faster builds** with caching" >> $GITHUB_STEP_SUMMARY
        echo "- 💾 **70-90% cache hit rate** for incremental builds" >> $GITHUB_STEP_SUMMARY
        echo "- 💰 **30-40% reduction** in GitHub Actions minutes" >> $GITHUB_STEP_SUMMARY
        echo "- 🔄 **Parallel processing** utilizing all available resources" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "## 📦 GitHub Packages Integration" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Available Packages" >> $GITHUB_STEP_SUMMARY
        echo "- **NPM Package**: \`@jsb2010/dropsentinel\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Container Images**: \`ghcr.io/jsb2010/dropsentinel\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Binary Releases**: Available in GitHub Releases" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 🔗 Quick Installation" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Install NPM package" >> $GITHUB_STEP_SUMMARY
        echo "npm install @jsb2010/dropsentinel" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Run with Docker" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ghcr.io/jsb2010/dropsentinel:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "## 🛠️ Workflow Management" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 🔧 Manual Workflow Triggers" >> $GITHUB_STEP_SUMMARY
        echo "1. **Go to Actions tab** in GitHub repository" >> $GITHUB_STEP_SUMMARY
        echo "2. **Select desired workflow** from the left sidebar" >> $GITHUB_STEP_SUMMARY
        echo "3. **Click 'Run workflow'** button" >> $GITHUB_STEP_SUMMARY
        echo "4. **Configure options** (if available) and run" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "### 📊 Monitoring Workflow Performance" >> $GITHUB_STEP_SUMMARY
        echo "- **Build times**: Monitor in workflow run summaries" >> $GITHUB_STEP_SUMMARY
        echo "- **Cache hit rates**: Check in build logs" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifact sizes**: View in build summaries" >> $GITHUB_STEP_SUMMARY
        echo "- **Success rates**: Track in workflow history" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "## 🎉 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "1. **Test optimized builds**: Push code to trigger new workflows" >> $GITHUB_STEP_SUMMARY
        echo "2. **Create a release**: Test the complete release pipeline" >> $GITHUB_STEP_SUMMARY
        echo "3. **Monitor performance**: Check build times and cache efficiency" >> $GITHUB_STEP_SUMMARY
        echo "4. **Use GitHub Packages**: Install and test published packages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status**: 🎉 **All workflows optimized and ready for production!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Last Updated**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

    - name: Check workflow files
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📁 Workflow Files Status" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        cd .github/workflows
        for file in *.yml; do
          if [ -f "$file" ]; then
            lines=$(wc -l < "$file")
            size=$(du -h "$file" | cut -f1)
            
            case "$file" in
              "ci.yml") status="✅ Active - Basic CI/CD" ;;
              "optimized-build.yml") status="🚀 Active - Optimized builds" ;;
              "release.yml") status="📦 Active - Release management" ;;
              "release-analytics.yml") status="📊 Active - Release analytics" ;;
              "codeql.yml") status="🔒 Active - Security analysis" ;;
              "maintenance.yml") status="🔧 Active - Maintenance tasks" ;;
              "build-packages.yml") status="⚠️ Deprecated - Use optimized-build.yml" ;;
              "workflow-status.yml") status="📊 Active - Status dashboard" ;;
              *) status="❓ Unknown" ;;
            esac
            
            echo "- **$file** ($lines lines, $size) - $status" >> $GITHUB_STEP_SUMMARY
          fi
        done
