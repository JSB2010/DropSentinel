name: Publish to GitHub Packages

on:
  release:
    types: [published]
  repository_dispatch:
    types: [publish-packages]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish-packages:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@jsb2010'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Extract version info
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
          PRERELEASE="${{ github.event.inputs.prerelease }}"
        elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          VERSION="${{ github.event.client_payload.version }}"
          PRERELEASE="${{ github.event.client_payload.prerelease }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
          PRERELEASE="false"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT
        echo "Publishing version: $VERSION (prerelease: $PRERELEASE)"

    - name: Update package.json for GitHub Packages
      run: |
        # Create a scoped package for GitHub Packages
        jq '.name = "@jsb2010/dropsentinel" | .version = "${{ steps.version.outputs.version }}" | .repository.url = "git+https://github.com/JSB2010/DropSentinel.git"' package.json > package-gh.json
        mv package-gh.json package.json

    - name: Build application
      run: npm run build

    - name: Publish to GitHub Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Create package manifest
      run: |
        cat > package-manifest.json << EOF
        {
          "name": "@jsb2010/dropsentinel",
          "version": "${{ steps.version.outputs.version }}",
          "description": "Advanced file security scanner with real-time protection",
          "repository": "https://github.com/JSB2010/DropSentinel",
          "homepage": "https://github.com/JSB2010/DropSentinel#readme",
          "bugs": "https://github.com/JSB2010/DropSentinel/issues",
          "license": "MIT",
          "author": "JSB2010",
          "keywords": ["security", "virus-scanner", "electron", "nextjs", "virustotal"],
          "publishedAt": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "prerelease": ${{ steps.version.outputs.prerelease }},
          "platforms": {
            "windows": {
              "formats": ["exe", "msi", "portable", "zip"],
              "architectures": ["x64"]
            },
            "macos": {
              "formats": ["dmg", "pkg", "zip"],
              "architectures": ["x64", "arm64"]
            },
            "linux": {
              "formats": ["AppImage", "deb", "rpm", "tar.gz"],
              "architectures": ["x64"]
            }
          }
        }
        EOF

    - name: Upload package manifest
      uses: actions/upload-artifact@v4
      with:
        name: package-manifest-${{ steps.version.outputs.version }}
        path: package-manifest.json
        retention-days: 365

  publish-container:
    name: Publish Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Create Dockerfile for development environment
      run: |
        cat > Dockerfile << 'EOF'
        FROM node:20-alpine

        # Install system dependencies
        RUN apk add --no-cache \
            git \
            python3 \
            make \
            g++ \
            libx11-dev \
            libxkbfile-dev \
            libsecret-dev

        # Set working directory
        WORKDIR /app

        # Copy package files
        COPY package*.json ./

        # Install dependencies
        RUN npm ci --legacy-peer-deps

        # Copy source code
        COPY . .

        # Build application
        RUN npm run build

        # Expose port
        EXPOSE 3000

        # Health check
        HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
          CMD curl -f http://localhost:3000/api/health || exit 1

        # Start application
        CMD ["npm", "start"]
        EOF

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  create-package-index:
    name: Create Package Index
    runs-on: ubuntu-latest
    needs: [publish-packages, publish-container]
    if: always()

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Create package index
      run: |
        mkdir -p packages-index

        cat > packages-index/README.md << 'EOF'
        # DropSentinel Packages

        ## 📦 Available Packages

        ### NPM Package (GitHub Packages)
        ```bash
        npm install @jsb2010/dropsentinel
        ```

        ### Container Image (GitHub Container Registry)
        ```bash
        docker pull ghcr.io/jsb2010/dropsentinel:latest
        ```

        ### Binary Releases
        Download platform-specific installers from the [Releases](https://github.com/JSB2010/DropSentinel/releases) page.

        ## 🚀 Quick Start

        ### Using NPM Package
        ```javascript
        const DropSentinel = require('@jsb2010/dropsentinel');
        // Use the package components
        ```

        ### Using Docker
        ```bash
        # Run development server
        docker run -p 3000:3000 ghcr.io/jsb2010/dropsentinel:latest

        # Run with custom configuration
        docker run -p 3000:3000 -v $(pwd)/config:/app/config ghcr.io/jsb2010/dropsentinel:latest
        ```

        ## 📋 Package Information

        - **Repository**: https://github.com/JSB2010/DropSentinel
        - **NPM Package**: https://github.com/JSB2010/DropSentinel/packages
        - **Container Registry**: https://github.com/JSB2010/DropSentinel/pkgs/container/dropsentinel
        - **Documentation**: https://github.com/JSB2010/DropSentinel#readme

        ## 🔐 Security

        All packages are:
        - Built from verified source code
        - Signed with GitHub's signing infrastructure
        - Scanned for vulnerabilities
        - Published with provenance attestation

        ## 📞 Support

        - [Issues](https://github.com/JSB2010/DropSentinel/issues)
        - [Discussions](https://github.com/JSB2010/DropSentinel/discussions)
        - [Security Policy](https://github.com/JSB2010/DropSentinel/security/policy)
        EOF

        # Create package.json for the index
        cat > packages-index/package.json << EOF
        {
          "name": "@jsb2010/dropsentinel-packages",
          "version": "1.0.0",
          "description": "Package index for DropSentinel",
          "main": "index.js",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/JSB2010/DropSentinel.git"
          },
          "keywords": ["dropsentinel", "packages", "index"],
          "author": "JSB2010",
          "license": "MIT"
        }
        EOF

    - name: Upload package index
      uses: actions/upload-artifact@v4
      with:
        name: packages-index
        path: packages-index/
        retention-days: 365

    - name: Update repository packages section
      run: |
        echo "## 📦 Packages Published" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **NPM Package**: \`@jsb2010/dropsentinel\`" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Container Image**: \`ghcr.io/jsb2010/dropsentinel\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
        echo "- [View NPM Package](https://github.com/JSB2010/DropSentinel/packages)" >> $GITHUB_STEP_SUMMARY
        echo "- [View Container Images](https://github.com/JSB2010/DropSentinel/pkgs/container/dropsentinel)" >> $GITHUB_STEP_SUMMARY
        echo "- [Download Binary Releases](https://github.com/JSB2010/DropSentinel/releases)" >> $GITHUB_STEP_SUMMARY
